{"version":3,"sources":["webpack:///./src/components/BlogPostNavigation.js","webpack:///./src/components/MasonryGrid.js","webpack:///./src/templates/PortfolioPostSingle.js"],"names":["previous","next","className","to","frontmatter","path","title","Masonry","children","gap","minWidth","rest","ref","useRef","useState","numCols","setNumCols","cols","Array","map","forEach","child","i","length","push","fillCols","resizeHandler","useCallback","Math","ceil","current","offsetWidth","useEffect","window","addEventListener","removeEventListener","data-uk-lightbox","_","index","key","query","data","pageContext","markdownRemark","projectLink","showMasonry","html","masonryImages","allFile","edges","filter","node","childImageSharp","src","fluid","foundFeatured","match","console","log","Layout","href","dangerouslySetInnerHTML","__html","image","BlogPostNavigation"],"mappings":"2FAAA,qCAGe,oBAAGA,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACb,yBAAKC,UAAU,wBACb,yBACEA,UAAS,qBACPF,GAAY,iCAGbA,GACC,kBAAC,IAAD,CAAMG,GAAIH,EAASI,YAAYC,MAA/B,GACML,EAASI,YAAYE,QAI/B,yBAAKJ,UAAS,qBAAsBD,GAAQ,6BACzCA,GACC,kBAAC,IAAD,CAAME,GAAIF,EAAKG,YAAYC,MAA3B,GAAqCJ,EAAKG,YAAYE,W,2+BCZ/C,SAASC,EAAT,GAA8D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,IAAgC,IAA3BC,gBAA2B,MAAhB,IAAgB,EAARC,E,oIAAQ,kCACpEC,EAAMC,mBAD8D,EAE5CC,mBAAS,GAAhCC,EAFmE,KAE1DC,EAF0D,KAGpEC,EAAO,EAAIC,MAAMH,IAAUI,KAAI,iBAAM,OAP5B,SAACX,EAAUS,GAC1BT,EAASY,SAAQ,SAACC,EAAOC,GAAR,OAAcL,EAAKK,EAAIL,EAAKM,QAAQC,KAAKH,MAO1DI,CAASjB,EAAUS,GAKnB,IAAMS,EAAgBC,uBAAY,WAChCX,EAAWY,KAAKC,KAAKjB,EAAIkB,QAAQC,YAAcrB,MAC9C,IAWH,OATAsB,oBAAUN,EAAe,IACzBM,qBAAU,WAGR,OAFAC,OAAOC,iBAAP,SAAkCR,GAE3B,WACLO,OAAOE,oBAAP,SAAqCT,MAEtC,CAACA,IAGF,uCAAKU,oBAAA,EAAiBlC,UAAU,UAAUU,IAAKA,EAAKH,IAAKA,GAASE,GAC/D,EAAIO,MAAMH,IAAUI,KAAI,SAACkB,EAAGC,GAAJ,OACvB,yBAAKpC,UAAU,cAAcqC,IAAKD,EAAO7B,IAAKA,GAC3CQ,EAAKqB,Q,gBCqBHE,GA9CE,sBAA4B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACdzC,EAAmByC,EAAnBzC,KAAMD,EAAa0C,EAAb1C,SAD0B,EAEIyC,EAAKE,eAAevC,YAAxDE,EAFgC,EAEhCA,MAAOsC,EAFyB,EAEzBA,YAAaC,EAFY,EAEZA,YACtBC,EAAOL,EAAKE,eAAeG,KAC3BC,EAAgBN,EAAKO,QAAQC,MAChCC,QAAO,YAAe,IAAZC,EAAW,EAAXA,KACHC,EAAkBD,GAAQA,EAAKC,gBAC/BC,EAAMD,GAAmBA,EAAgBE,MAAMD,IAE/CE,EAAgBF,GAAOA,EAAIG,MADxB,YAIT,OAA2B,OAApBJ,IAA6BG,KAErCpC,KAAI,YAAe,IAAZgC,EAAW,EAAXA,KAEN,OADAM,QAAQC,IAAIP,EAAKC,gBAAgBE,OAC1BH,EAAKC,gBAAgBE,SAGhC,OACE,kBAACK,EAAA,EAAD,KACE,yBAAKzD,UAAU,yBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,kBAAkBI,GAChC,uBAAGJ,UAAU,0BAA0B0D,KAAMhB,GAA7C,kBAIF,yBAAKiB,wBAAyB,CAAEC,OAAQhB,KACvCD,GACC,kBAACtC,EAAD,KACGwC,EAAc5B,KAAI,SAAC4C,EAAOzB,GACzB,OACE,uBAAGC,IAAKD,EAAOpC,UAAU,qBAAqB0D,KAAMG,EAAMV,KACxD,kBAAC,IAAD,CAAKC,MAAOS,UAOxB,kBAACC,EAAA,EAAD,CAAoB/D,KAAMA,EAAMD,SAAUA,MAK9B","file":"component---src-templates-portfolio-post-single-js-d61993c2a536fe2a04de.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default ({ previous, next }) => (\n  <div className=\"blog_single-nav mb-4\">\n    <div\n      className={`blog_single-next ${\n        previous && \"blog_single-previous_chevron\"\n      }`}\n    >\n      {previous && (\n        <Link to={previous.frontmatter.path}>\n          {`${previous.frontmatter.title}`}\n        </Link>\n      )}\n    </div>\n    <div className={`blog_single-next ${next && \"blog_single-next_chevron\"}`}>\n      {next && (\n        <Link to={next.frontmatter.path}>{`${next.frontmatter.title}`}</Link>\n      )}\n    </div>\n  </div>\n)\n","import React, { useEffect, useRef, useState, useCallback } from \"react\"\n\nconst fillCols = (children, cols) => {\n  children.forEach((child, i) => cols[i % cols.length].push(child))\n}\n\nexport default function Masonry({ children, gap, minWidth = 500, ...rest }) {\n  const ref = useRef()\n  const [numCols, setNumCols] = useState(3)\n  const cols = [...Array(numCols)].map(() => [])\n  fillCols(children, cols)\n\n  // const resizeHandler = () =>\n  //   setNumCols(Math.ceil(ref.current.offsetWidth / minWidth))\n\n  const resizeHandler = useCallback(() => {\n    setNumCols(Math.ceil(ref.current.offsetWidth / minWidth))\n  }, [])\n\n  useEffect(resizeHandler, [])\n  useEffect(() => {\n    window.addEventListener(`resize`, resizeHandler)\n\n    return () => {\n      window.removeEventListener(`resize`, resizeHandler)\n    }\n  }, [resizeHandler])\n\n  return (\n    <div data-uk-lightbox className=\"masonry\" ref={ref} gap={gap} {...rest}>\n      {[...Array(numCols)].map((_, index) => (\n        <div className=\"masonry-col\" key={index} gap={gap}>\n          {cols[index]}\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Layout from \"src/components/Layout\"\nimport MasonryGrid from \"src/components/MasonryGrid\"\nimport BlogPostNavigation from \"src/components/BlogPostNavigation\"\n\nexport default ({ data, pageContext }) => {\n  const { next, previous } = pageContext\n  const { title, projectLink, showMasonry } = data.markdownRemark.frontmatter\n  const html = data.markdownRemark.html\n  const masonryImages = data.allFile.edges\n    .filter(({ node }) => {\n      const childImageSharp = node && node.childImageSharp\n      const src = childImageSharp && childImageSharp.fluid.src\n      let re = /featured/\n      const foundFeatured = src && src.match(re)\n\n      // Filter for file nodes that have images and are not featured images\n      return childImageSharp !== null && !foundFeatured\n    })\n    .map(({ node }) => {\n      console.log(node.childImageSharp.fluid)\n      return node.childImageSharp.fluid\n    })\n\n  return (\n    <Layout>\n      <div className=\"portfolio_single mb-4\">\n        <div className=\"portfolio_single-title\">\n          <h1 className=\"accent-heading\">{title}</h1>\n          <a className=\"portfolio_single-button\" href={projectLink}>\n            Visit Website\n          </a>\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n        {showMasonry && (\n          <MasonryGrid>\n            {masonryImages.map((image, index) => {\n              return (\n                <a key={index} className=\"image-link-wrapper\" href={image.src}>\n                  <Img fluid={image} />\n                </a>\n              )\n            })}\n          </MasonryGrid>\n        )}\n      </div>\n      <BlogPostNavigation next={next} previous={previous} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!, $directory: String!) {\n    markdownRemark(frontmatter: { path: { eq: $slug } }) {\n      html\n      frontmatter {\n        projectLink\n        title\n        showMasonry\n      }\n    }\n    allFile(filter: { relativeDirectory: { eq: $directory } }) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 700) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}